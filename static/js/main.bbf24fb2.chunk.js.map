{"version":3,"sources":["CurrencyRow.js","Header.jsx","services/GetDataApi.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","Box","component","sx","m","width","noValidate","autoComplete","TextField","value","onChange","type","id","label","variant","FormControl","fullWidth","InputLabel","Select","map","option","MenuItem","key","Header","data","ticket","setTicket","useEffect","filter","el","name","flexGrow","AppBar","position","Toolbar","GetDataApi","FetchApi","a","fetch","response","ok","Error","json","BASE_URL","myHeaders","Headers","append","requestOptions","method","redirect","headers","Wrapper","styled","div","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","setData","neededTickets","setNeededTickets","listItems","then","arr","i","length","push","Object","txt","rate","res","firstCurrency","keys","rates","base","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbf24fb2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Typography from '@mui/material/Typography';\r\nimport styled from 'styled-components';\r\n\r\nexport default function CurrencyRow(props) {\r\n  const {\r\n    currencyOptions,\r\n    selectedCurrency,\r\n    onChangeCurrency,\r\n    onChangeAmount,\r\n    amount\r\n  } = props\r\n  return (\r\n    <div>\r\n\r\n      <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& > :not(style)': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n        \r\n      <TextField\r\n        value={amount} \r\n        onChange={onChangeAmount}\r\n        type=\"number\" \r\n        id=\"outlined-basic\" \r\n        label=\"Введите сумму\" \r\n        variant=\"outlined\"\r\n      />\r\n\r\n      <FormControl fullWidth>\r\n        <InputLabel>{selectedCurrency}</InputLabel>\r\n        <Select\r\n          label=\"Выберите валюту\"\r\n          value={selectedCurrency} \r\n          onChange={onChangeCurrency}\r\n        >\r\n        {currencyOptions.map(option => (\r\n          <MenuItem key={option} value={option}>{option}</MenuItem>\r\n        ))}\r\n\r\n        </Select>\r\n      </FormControl>\r\n    </Box> \r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React , { useState , useEffect } from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nfunction Header({data , ticket , setTicket}) {\r\n\r\n    useEffect(() => {\r\n      setTicket(ticket = data.filter(el => el.name === \"Євро\" || el.name === \"Долар США\"))\r\n    },[data])\r\n  \r\n    return (\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            {ticket.map((el , id) => <div key={id}>{el.name}:{el.value}</div>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n    );\r\n  }\r\n  \r\n  export default Header","\r\nfunction GetDataApi(){\r\n    const FetchApi = async () => {\r\n        const response = await fetch('https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json');\r\n\r\n        if(!response.ok){\r\n            throw new Error('error server api');\r\n        }\r\n        const data = await response.json();\r\n\r\n        return data\r\n    }\r\n    return {FetchApi}\r\n}\r\n\r\n\r\nexport default  GetDataApi ","import React, { useEffect, useState } from \"react\";\r\nimport CurrencyRow from \"./CurrencyRow\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"./Header\";\r\nimport GetDataApi from \"./services/GetDataApi\";\r\n\r\nconst BASE_URL = \"https://api.apilayer.com/exchangerates_data/latest\";\r\n\r\nlet myHeaders = new Headers();\r\nmyHeaders.append(\"apikey\", \"BRWzZ83Zj6qSaREN020sQ53DyKr4jEzw\");\r\n\r\nlet requestOptions = {\r\n  method: \"GET\",\r\n  redirect: \"follow\",\r\n  headers: myHeaders,\r\n};\r\n\r\nfunction App() {\r\n  const [currencyOptions, setCurrencyOptions] = useState([]);\r\n  const [fromCurrency, setFromCurrency] = useState();\r\n  const [toCurrency, setToCurrency] = useState();\r\n  const [exchangeRate, setExchangeRate] = useState();\r\n  const [amount, setAmount] = useState(1);\r\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\r\n\r\n  const { FetchApi } = GetDataApi();\r\n  const [data, setData] = useState([]);\r\n\r\n  const [neededTickets, setNeededTickets] = useState([]);\r\n\r\n  const listItems = async () => {\r\n    await FetchApi().then((data) => {\r\n      let arr = [];\r\n      for (let i = 0; i < data.length; i++) {\r\n        arr.push(\r\n          new Object({\r\n            name: data[i].txt,\r\n            value: data[i].rate,\r\n          })\r\n        );\r\n      }\r\n      return setData(arr);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    listItems();\r\n  }, []);\r\n\r\n  let toAmount, fromAmount;\r\n  if (amountInFromCurrency) {\r\n    fromAmount = amount;\r\n    toAmount = amount * exchangeRate;\r\n  } else {\r\n    toAmount = amount;\r\n    fromAmount = amount / exchangeRate;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(BASE_URL, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const firstCurrency = Object.keys(data.rates)[0];\r\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\r\n        setFromCurrency(data.base);\r\n        setToCurrency(firstCurrency);\r\n        setExchangeRate(data.rates[firstCurrency]);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fromCurrency != null && toCurrency != null) {\r\n      fetch(\r\n        `${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`,\r\n        requestOptions\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\r\n    }\r\n  }, [fromCurrency, toCurrency]);\r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(true);\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value);\r\n    setAmountInFromCurrency(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header ticket={neededTickets} setTicket={setNeededTickets} data={data} />{\" \"}\r\n      <Wrapper>\r\n        <CurrencyRow\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={fromCurrency}\r\n          onChangeCurrency={(e) => setFromCurrency(e.target.value)}\r\n          onChangeAmount={handleFromAmountChange}\r\n          amount={fromAmount}\r\n        />{\" \"}\r\n        <CurrencyRow\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={toCurrency}\r\n          onChangeCurrency={(e) => setToCurrency(e.target.value)}\r\n          onChangeAmount={handleToAmountChange}\r\n          amount={toAmount}\r\n        />{\" \"}\r\n      </Wrapper>{\" \"}\r\n    </div>\r\n  );\r\n}\r\nconst Wrapper = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}